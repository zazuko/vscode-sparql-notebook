{
  "name": "sparql-notebook",
  "displayName": "SPARQL Notebook",
  "description": "A powerful way to document SPARQL queries and make them execute as notebook code cells",
  "publisher": "Zazuko",
  "license": "MIT",
  "icon": "images/zazuko.png",
  "preview": true,
  "repository": {
    "url": "https://github.com/zazuko/vscode-sparql-notebook.git"
  },
  "version": "0.0.37",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Notebooks",
    "Data Science"
  ],
  "keywords": [
    "sparql"
  ],
  "activationEvents": [
    "onNotebook:sparql-notebook"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "notebooks": [
      {
        "id": "sparql-notebook",
        "type": "sparql-notebook",
        "displayName": "SPARQL Notebook",
        "selector": [
          {
            "filenamePattern": "*.sparqlbook"
          }
        ]
      }
    ],
    "notebookRenderer": [
      {
        "id": "sparql-notebook-json-result",
        "entrypoint": "./out/renderer.js",
        "displayName": "SPARQL JSON Result",
        "mimeTypes": [
          "application/sparql-results+json"
        ]
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "sparql-notebook.exportToMarkdown",
          "when": "false"
        },
        {
          "command": "sparql-notebook.createStoreFromFile",
          "when": "false"
        }
      ],
      "view/item/context": [
        {
          "command": "sparql-notebook.connect",
          "when": "view == sparql-notebook-connections &&  viewItem == database",
          "group": "inline"
        },
        {
          "command": "sparql-notebook.connect",
          "when": "view == sparql-notebook-connections &&  viewItem == database"
        },
        {
          "command": "sparql-notebook.deleteConnectionConfiguration",
          "when": "view == sparql-notebook-connections &&  viewItem == database"
        }
      ],
      "view/title": [
        {
          "command": "sparql-notebook.addNewConnectionConfiguration",
          "when": "view == sparql-notebook-connections",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceExtname == .sparqlbook",
          "command": "sparql-notebook.exportToMarkdown",
          "group": "sparql-notebook"
        },
        {
          "when": "resourceExtname == .ttl || resourceExtname == .nt || resourceExtname == .rdf",
          "command": "sparql-notebook.createStoreFromFile",
          "group": "sparql-notebook"
        }
      ],
      "notebook/cell/title": [
        {
          "command": "sparql-notebook.addQueryFromFile",
          "group": "cell/insert@1",
          "when": "resourceExtname == .sparqlbook"
        }
      ]
    },
    "commands": [
      {
        "command": "sparql-notebook.addQueryFromFile",
        "title": "Add Query from File",
        "icon": {
          "dark": "assets/dark/add.svg",
          "light": "assets/light/add.svg"
        }
      },
      {
        "command": "sparql-notebook.connect",
        "title": "Connect to SPARQL Endpoint",
        "icon": {
          "dark": "assets/dark/endpoint-connected.svg",
          "light": "assets/light/endpoint-connected.svg"
        }
      },
      {
        "command": "sparql-notebook.addNewConnectionConfiguration",
        "title": "Create New Connection Configuration",
        "icon": {
          "light": "assets/light/plus.svg",
          "dark": "assets/dark/plus.svg"
        }
      },
      {
        "command": "sparql-notebook.deleteConnectionConfiguration",
        "title": "Delete Connection Configuration"
      },
      {
        "title": "SPARQL Notebook: Export to Markdown",
        "command": "sparql-notebook.exportToMarkdown"
      },
      {
        "title": "SPARQL Notebook: Use File as Store",
        "command": "sparql-notebook.createStoreFromFile"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sparql-notebook",
          "title": "Sparql Notebook",
          "icon": "assets/logo.svg"
        }
      ]
    },
    "views": {
      "sparql-notebook": [
        {
          "id": "sparql-notebook-connections",
          "name": "Sparql Connections",
          "visibility": "visible",
          "icon": "assets/logo.svg",
          "contextualTitle": "Connections"
        }
      ]
    },
    "configuration": [
      {
        "title": "SPARQL Notebook",
        "properties": {
          "sparqlbook.useNamespaces": {
            "type": "boolean",
            "default": true,
            "description": "Format output using prefixes from query."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --mode production",
    "lint": "eslint src --ext ts",
    "watch": "webpack --mode development --watch",
    "test": "vscode-test",
    "deploy": "npx vsce publish",
    "package": "npx vsce package"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/react": "^18.2.21",
    "@types/react-dom": "^18.2.7",
    "@types/vscode": "^1.90.0",
    "@types/vscode-notebook-renderer": "^1.72.3",
    "@types/vscode-webview": "^1.57.2",
    "@types/webpack-env": "^1.18.1",
    "@typescript-eslint/eslint-plugin": "^7.13.0",
    "@typescript-eslint/parser": "^ 7.13.0",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/test-cli": "^0.0.9",
    "css-loader": "^6.8.1",
    "eslint": "^8.56.0",
    "fork-ts-checker-webpack-plugin": "^9.0.2",
    "glob": "^10.4.1",
    "mocha": "^10.4.0",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "style-loader": "^3.3.3",
    "ts-loader": "^9.5.1",
    "typescript": "^5.4.5",
    "url": "^0.11.1",
    "util": "^0.12.5",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "@zazuko/prefixes": "^2.2.0",
    "axios": "^1.6.7",
    "oxigraph": "^0.3.22",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "extensionDependencies": [
    "stardog-union.stardog-rdf-grammars",
    "stardog-union.vscode-langserver-sparql",
    "RandomFractalsInc.vscode-data-table"
  ]
}